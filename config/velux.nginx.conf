upstream velux {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  # for UNIX domain socket setups:
  server unix:/tmp/.unicorn.velux.sock fail_timeout=0;

  # for TCP setups, point these to your backend servers
  # server 192.168.0.7:8080 fail_timeout=0;
  # server 192.168.0.8:8080 fail_timeout=0;
  # server 192.168.0.9:8080 fail_timeout=0;
}

# server {
#   server_name www.velux.com;
#   return 301 $scheme://velux.com$request_uri;
# }

server {
  #     listen 8000;
  #     listen somename:8080;
  #     server_name somename alias another.alias;
  #     root html;
  #     index index.html index.htm;
  #       listen [::]:80 ipv6only=on; # deferred or accept_filter recommended
  listen 80; # default deferred

  client_max_body_size 4G;
  server_name velux.alco.dk;
  # Make site accessible from http://localhost/
  # server_name localhost;
  keepalive_timeout 5;

  # path for static files
  root /var/www/velux/current/public;

  # Prefer to serve static files directly from nginx to avoid unnecessary
  try_files $uri/index.html $uri.html $uri @velux;


  location @velux {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://velux;
          # Uncomment to enable naxsi on this location
          # include /etc/nginx/naxsi.rules
  }

  location ~* ^/assets/ {
    # Per RFC2616 - 1 year maximum expiry
    # gzip_static on;
    expires 1y;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
  #location /RequestDenied {
  #     proxy_pass http://127.0.0.1:8080;
  #}

  # deny access to .htaccess files, if Apache's document root
  location ~ /\.ht {
          deny all;
  }

  # Rails error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
          root /var/www/velux/current/public;
  }
}


# HTTPS server
#
#server {
#       listen 443;
#       server_name localhost;
#
#       root html;
#       index index.html index.htm;
#
#       ssl on;
#       ssl_certificate cert.pem;
#       ssl_certificate_key cert.key;
#
#       ssl_session_timeout 5m;
#
#       ssl_protocols SSLv3 TLSv1;
#       ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#       ssl_prefer_server_ciphers on;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
